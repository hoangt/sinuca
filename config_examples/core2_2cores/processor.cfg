INTERCONNECTION_LATENCY = 1;
INTERCONNECTION_WIDTH = 64;

STAGE_FETCH_CYCLES = 2;
STAGE_DECODE_CYCLES = 2;
STAGE_RENAME_CYCLES = 2;
STAGE_DISPATCH_CYCLES = 2;
STAGE_EXECUTION_CYCLES = 0;
STAGE_COMMIT_CYCLES = 2;

STAGE_FETCH_WIDTH = 6;
STAGE_DECODE_WIDTH = 4;
STAGE_RENAME_WIDTH = 4;
STAGE_DISPATCH_WIDTH = 4;
STAGE_EXECUTION_WIDTH = 4;
STAGE_COMMIT_WIDTH = 4;

FETCH_BUFFER_SIZE = 18;
DECODE_BUFFER_SIZE = 24;
REORDER_BUFFER_SIZE = 96;
UNIFIED_RESERVATION_STATION_WINDOW_SIZE = 32;

MEMORY_ORDER_BUFFER_READ_SIZE = 24;
MEMORY_ORDER_BUFFER_WRITE_SIZE = 16;

DISAMBIGUATION_TYPE = "PERFECT";
DISAMBIGUATION_BLOCK_SIZE = 64;
REGISTER_FORWARD_LATENCY = 0;
SOLVE_ADDRESS_TO_ADDRESS = FALSE;

FETCH_BLOCK_SIZE = 16;
WAIT_WRITE_COMPLETE = FALSE;

BRANCH_PER_FETCH = 1;
INFLIGHT_BRANCHES_SIZE = 8;
BRANCH_FLUSH_LATENCY = 20;

// ====================================================================
// Integer Functional Units
NUMBER_FU_INT_ALU = 3;
LATENCY_FU_INT_ALU = 1;
WAIT_BETWEEN_FU_INT_ALU = 1;

NUMBER_FU_INT_MUL = 1;
LATENCY_FU_INT_MUL = 4;
WAIT_BETWEEN_FU_INT_MUL = 2;

NUMBER_FU_INT_DIV = 1;
LATENCY_FU_INT_DIV = 26;
WAIT_BETWEEN_FU_INT_DIV = 26;   // Not Pipelined

/// ====================================================================
/// Floating Point Functional Units
NUMBER_FU_FP_ALU = 1;
LATENCY_FU_FP_ALU = 3;
WAIT_BETWEEN_FU_FP_ALU = 1;

NUMBER_FU_FP_MUL = 1;
LATENCY_FU_FP_MUL = 5;
WAIT_BETWEEN_FU_FP_MUL = 1;

NUMBER_FU_FP_DIV = 1;
LATENCY_FU_FP_DIV = 5;
WAIT_BETWEEN_FU_FP_DIV = 5;   // Not Pipelined

/// ====================================================================
/// Memory Functional Units
NUMBER_FU_MEM_LOAD = 1;
LATENCY_FU_MEM_LOAD = 1;
WAIT_BETWEEN_FU_MEM_LOAD = 1;

NUMBER_FU_MEM_STORE = 1;
LATENCY_FU_MEM_STORE = 1;
WAIT_BETWEEN_FU_MEM_STORE = 1;

// =============================================================================
BRANCH_PREDICTOR :
{
 // PAs
    TYPE = "TWO_LEVEL_PAS";
    BTB_LINE_NUMBER = 4096;
    BTB_ASSOCIATIVITY = 4;
    BTB_REPLACEMENT_POLICY = "lru";
    // =============================
    // PBHT
    PBHT_LINE_NUMBER = 16384;
    PBHT_SIGNATURE_BITS = 16;
    // =============================
    // SPHT
    SPHT_LINE_NUMBER = 128;
    SPHT_SET_NUMBER = 1024;
    SPHT_INDEX_HASH = "input2_only"
    FSM_BITS = 2;



    // PAs
    # ~ TYPE = "TWO_LEVEL_PAS";
    # ~ BTB_LINE_NUMBER = 2048;
    # ~ BTB_ASSOCIATIVITY = 4;
    # ~ BTB_REPLACEMENT_POLICY = "lru";
    # ~ // =============================
    # ~ // PBHT
    # ~ PBHT_LINE_NUMBER = 2048;
    # ~ PBHT_ASSOCIATIVITY = 4;
    # ~ PBHT_REPLACEMENT_POLICY = "lru";
    # ~ // =============================
    # ~ // SPHT
    # ~ SPHT_LINE_NUMBER = 2048;
    # ~ SPHT_SET_NUMBER = 32;
    # ~ SPHT_INDEX_HASH = "xor_simple"
    # ~ FSM_BITS = 2;

    // PAg
    # ~ TYPE = "TWO_LEVEL_PAG";
    # ~ BTB_LINE_NUMBER = 2048;
    # ~ BTB_ASSOCIATIVITY = 4;
    # ~ BTB_REPLACEMENT_POLICY = "lru";
    # ~ // =============================
    # ~ // PBHT
    # ~ PBHT_LINE_NUMBER = 2048;
    # ~ PBHT_ASSOCIATIVITY = 4;
    # ~ PBHT_REPLACEMENT_POLICY = "lru";
    # ~ // =============================
    # ~ // GPHT
    # ~ GPHT_LINE_NUMBER = 4096;
    # ~ GPHT_INDEX_HASH = "xor_simple"
    # ~ FSM_BITS = 2;

    // GAs
    # ~ TYPE = "TWO_LEVEL_GAS";
    # ~ BTB_LINE_NUMBER = 2048;
    # ~ BTB_ASSOCIATIVITY = 4;
    # ~ BTB_REPLACEMENT_POLICY = "lru";
    # ~ // =============================
    # ~ // SPHT
    # ~ SPHT_LINE_NUMBER = 4096;
    # ~ SPHT_SET_NUMBER = 32;
    # ~ SPHT_INDEX_HASH = "xor_simple"
    # ~ FSM_BITS = 2;

    // GAg
    # ~ TYPE = "TWO_LEVEL_GAG";
    # ~ BTB_LINE_NUMBER = 2048;
    # ~ BTB_ASSOCIATIVITY = 4;
    # ~ BTB_REPLACEMENT_POLICY = "lru";
    # ~ // =============================
    # ~ // GPHT
    # ~ GPHT_LINE_NUMBER = 4096;
    # ~ GPHT_INDEX_HASH = "xor_simple"
    # ~ FSM_BITS = 2;

    // Bi-Modal
    # ~ TYPE = "BI_MODAL";
    # ~ BTB_LINE_NUMBER = 2048;
    # ~ BTB_ASSOCIATIVITY = 4;
    # ~ BTB_REPLACEMENT_POLICY = "lru";
    # ~ // ==============================
    # ~ // BHT
    # ~ BHT_LINE_NUMBER = 4096;
    # ~ FSM_BITS = 2;
};
