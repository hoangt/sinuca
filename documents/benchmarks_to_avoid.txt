ok
./npb_omp/DC/dc.c:#pragma omp critical

ok
./npb_omp/LU/error.f:!$omp atomic
./npb_omp/LU/l2norm.f:!$omp atomic

ok
./npb_omp/BT/error.f:!$omp atomic
./npb_omp/BT/error.f:!$omp atomic

FAIL
./npb_omp/UA/transfer.f:c$      call omp_init_lock(tlock(i))
./npb_omp/UA/transfer.f:c$        call omp_set_lock(tlock(ig1))
./npb_omp/UA/transfer.f:c$        call omp_unset_lock(tlock(ig1))
./npb_omp/UA/transfer.f:c$        call omp_set_lock(tlock(ig2))
./npb_omp/UA/transfer.f:c$        call omp_unset_lock(tlock(ig2))
./npb_omp/UA/transfer.f:c$        call omp_set_lock(tlock(ig3))
./npb_omp/UA/transfer.f:c$        call omp_unset_lock(tlock(ig3))
./npb_omp/UA/transfer.f:c$        call omp_set_lock(tlock(ig4))
./npb_omp/UA/transfer.f:c$        call omp_unset_lock(tlock(ig4))
./npb_omp/UA/transfer.f:c$                call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                  call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                  call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$                call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$          call omp_set_lock(tlock(ig1))
./npb_omp/UA/transfer.f:c$          call omp_unset_lock(tlock(ig1))
./npb_omp/UA/transfer.f:c$          call omp_set_lock(tlock(ig2))
./npb_omp/UA/transfer.f:c$          call omp_unset_lock(tlock(ig2))
./npb_omp/UA/transfer.f:c$          call omp_set_lock(tlock(ig3))
./npb_omp/UA/transfer.f:c$          call omp_unset_lock(tlock(ig3))
./npb_omp/UA/transfer.f:c$          call omp_set_lock(tlock(ig4))
./npb_omp/UA/transfer.f:c$          call omp_unset_lock(tlock(ig4))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$          call omp_set_lock(tlock(ig1))
./npb_omp/UA/transfer.f:c$          call omp_unset_lock(tlock(ig1))
./npb_omp/UA/transfer.f:c$          call omp_set_lock(tlock(ig2))
./npb_omp/UA/transfer.f:c$          call omp_unset_lock(tlock(ig2))
./npb_omp/UA/transfer.f:c$          call omp_set_lock(tlock(ig3))
./npb_omp/UA/transfer.f:c$          call omp_unset_lock(tlock(ig3))
./npb_omp/UA/transfer.f:c$          call omp_set_lock(tlock(ig4))
./npb_omp/UA/transfer.f:c$          call omp_unset_lock(tlock(ig4))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_set_lock(tlock(ig))
./npb_omp/UA/transfer.f:c$              call omp_unset_lock(tlock(ig))
./npb_omp/UA/transfer_au.f:c$      call omp_init_lock(tlock(i))
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/transfer_au.f:c$OMP ATOMIC
./npb_omp/UA/mason.f:c$       call omp_set_lock(tlock(n))
./npb_omp/UA/mason.f:c$       call omp_unset_lock(tlock(n))
./npb_omp/UA/header.h:cc    integer (kind=omp_lock_kind) tlock(lmor)

FAIL (low number of parallel region)
./npb_omp/EP/ep.f:!$omp atomic

ok
./npb_omp/SP/error.f:!$omp atomic
./npb_omp/SP/error.f:!$omp atomic

FAIL
./spec_omp2001/benchspec/OMPM2001/320.equake_m/src/src.alt/ompl/quake.c:        omp_set_lock(&lock_node[ARCHvertex[i][j]/100]);
./spec_omp2001/benchspec/OMPM2001/320.equake_m/src/src.alt/ompl/quake.c:        omp_unset_lock(&lock_node[ARCHvertex[i][j]/100]);
./spec_omp2001/benchspec/OMPM2001/320.equake_m/src/src.alt/ompl/quake.c:      omp_set_lock(&lock_node[ARCHvertex[i][j]/100]);
./spec_omp2001/benchspec/OMPM2001/320.equake_m/src/src.alt/ompl/quake.c:      omp_unset_lock(&lock_node[ARCHvertex[i][j]/100]);
./spec_omp2001/benchspec/OMPM2001/320.equake_m/src/src.alt/ompl/quake.c:          omp_set_lock(&lock_node[ARCHvertex[i][k]/100]);
./spec_omp2001/benchspec/OMPM2001/320.equake_m/src/src.alt/ompl/quake.c:          omp_unset_lock(&lock_node[ARCHvertex[i][k]/100]);
./spec_omp2001/benchspec/OMPM2001/320.equake_m/src/src.alt/ompl/quake.c:     omp_init_lock(&lock_node[i]);

ok
./spec_omp2001/benchspec/OMPM2001/330.art_m/src/scanner.c:#pragma omp critical

ok
./spec_omp2001/benchspec/OMPM2001/310.wupwise_m/src/dznrm2.f:C$OMP    CRITICAL
./spec_omp2001/benchspec/OMPM2001/310.wupwise_m/src/dznrm2.f:C$OMP    END CRITICAL

FAIL
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/rectmm.c:      omp_set_lock(&(a1->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/rectmm.c:      omp_unset_lock(&(a1->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/rectmm.c:            omp_set_lock(&(a2->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/rectmm.c:            omp_unset_lock(&(a2->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/rectmm.c:      omp_set_lock(&(a1->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/rectmm.c:      omp_unset_lock(&(a1->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/vnonbon.c:      omp_set_lock(&(a1->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/vnonbon.c:      omp_unset_lock(&(a1->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/vnonbon.c:	  omp_set_lock(&(a2->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/vnonbon.c:	  omp_unset_lock(&(a2->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/vnonbon.c:      omp_set_lock(&(a1->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/vnonbon.c:      omp_unset_lock(&(a1->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/atoms.c:	omp_init_lock(&(nnew->lock));
./spec_omp2001/benchspec/OMPM2001/332.ammp_m/src/ammp.h:	omp_lock_t lock;

ok
./spec_omp2001/benchspec/OMPM2001/328.fma3d_m/src/platq.f90:!$OMP CRITICAL (PLATQ_MASS_VALUES)
./spec_omp2001/benchspec/OMPM2001/328.fma3d_m/src/platq.f90:!$OMP END CRITICAL (PLATQ_MASS_VALUES)

FAIL
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:INTEGER, PARAMETER :: OMP_LOCK_KIND = selected_int_kind(18)
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:INTEGER(KIND=OMP_LOCK_KIND), DIMENSION(indmax) :: lck
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$        CALL omp_init_lock(lck(i))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$    CALL omp_destroy_lock(lck(i))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$      CALL omp_set_lock(lck(j))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$      CALL omp_set_lock(lck(iother))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$      CALL omp_set_lock(lck(iother))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$      CALL omp_set_lock(lck(j))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$      CALL omp_unset_lock(lck(iother))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$      CALL omp_unset_lock(lck(j))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$      CALL omp_unset_lock(lck(j))
./spec_omp2001/benchspec/OMPM2001/326.gafort_m/src/gafort.f90:!$      CALL omp_unset_lock(lck(iother))

FAIL
./nanobench/openmp_prod_cons.c:    omp_lock_t omp_lock;
./nanobench/openmp_prod_cons.c:        omp_init_lock(&th_pair_data[count].omp_lock);
./nanobench/openmp_prod_cons.c:                omp_set_lock(&th_pair_data[th_pair].omp_lock);
./nanobench/openmp_prod_cons.c:                omp_unset_lock(&th_pair_data[th_pair].omp_lock);
./nanobench/openmp_prod_cons.c:                omp_set_lock(&th_pair_data[th_pair].omp_lock);
./nanobench/openmp_prod_cons.c:                omp_unset_lock(&th_pair_data[th_pair].omp_lock);

ok
./nanobench/openmp_critical.c:#include <omp.h>
./nanobench/openmp_critical.c:    num_threads = omp_get_max_threads();
./nanobench/openmp_critical.c:        #pragma omp parallel for private(sum) schedule(static, 1)
./nanobench/openmp_critical.c:            #pragma omp critical
